plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.sonarqube" version "2.7"
	id 'jacoco'
	id "io.franzbecker.gradle-lombok" version "1.14"
}

group = 'com.github.jferrater'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

ext {
	gradleLombokVersion = '1.18.4'
}

lombok {
	version = "${gradleLombokVersion}"
	sha256 = ""
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.3.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation group: 'com.h2database', name: 'h2', version: '1.4.197'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.2'
	testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

test {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property 'sonar.projectName', 'petprofiles-service'
		property 'sonar.github.repository', 'jferrater/petclinic-app'
		property 'sonar.projectKey', 'jferrater_petprofiles-service'
		property 'sonar.organization', 'jferrater'
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.projectVersion', version
		property 'sonar.login', System.getenv('PETCLINIC_APP_TOKEN')
		property 'sonar.java.coveragePlugin', 'jacoco'
		property 'sonar.exclusions', '**/*Config.java, **/entity/*.java, **/*Application.java'
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}